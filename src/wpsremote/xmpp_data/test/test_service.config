# This is a inni file to be read with python ConfigParser (https://docs.python.org/2/library/configparser.html)
# Is possible to reference another variable in the ini file using the format %(<variable name>)s

[DEFAULT]
service = Service
namespace = default
description = foo service
executable_path = \code\etl
executable_cmd = python %(executable_path)s\etl.py
output_dir = src\wpsremote\xmpp_data\test\tmp
unique_execution_id = 123
workdir = %(output_dir)s\%(unique_execution_id)s
active = True
max_running_time_seconds = 10
load_average_scan_minutes = 1
servicePassword = admin

[Input1]
class = param
name = referenceDate
type = string
description = Start date of optmizier
list = [item_0, item_1, item_2]
int_list = [0, 1, 2, 3]
float_list = [0.12, 1.6, 2.55, 3.4]
path_list = [%(workdir)s, src\wpsremote\xmpp_data\test\tmp]

[Action1]
class = cmdline
input_ref = referenceDate
alias = d
template = -name value

[Input2]
class = param
name = numberOfEvaluations
type = int
description = Number of optimizer iterations

[Action2]
class = updateJSONfile
input_ref = numberOfEvaluations
source_filepath = .\configs\OAAonDemand\CMREOAA_MainConfigFile_template.json
target_filepath = %(workdir)s\config.json
json_path_expr = ['Config']['nEvaluations']

[Input3]
class = param
name = timeHorizon
type = int
description = Optimizer time horizon in seconds

[Action3]
class = updateJSONfile
input_ref = timeHorizon
source_filepath = .\configs\OAAonDemand\CMREOAA_MainConfigFile_template.json
target_filepath = %(workdir)s\config.json
json_path_expr = ['Config']['timeHorizon']


[Input4]
class = param
name = asset
type = application/json
description = Assets configuration
min = 1
max = 10

[Action4]
class = createJSONfile
input_ref = asset
target_filepath = %(workdir)s\asset_${json_path_expr}.json
json_path_expr = ['Asset']['id']
json_schema = ./src/wpsremote/xmpp_data/test/asset_schema.json


[Const1]
class = const
name = workdir
type = string
description = Optimal Asset Allocator process sandbox working directory
value = %(workdir)s

[Action5]
class = cmdline
input_ref = workdir
alias = w
template = -name value


[Const2]
class = const
name = etlExecutionType
type = string
description = identifies the type of execution performed by etl.py script
value = oaaOnDemand

[Action6]
class = cmdline
input_ref = etlExecutionType
template = value


[Action7]
class = copyfile
source_filepath = .\configs\OAAonDemand\oaaOnDemand_template.properties
target_filepath= %(workdir)s\oaaOnDemand.properties


[Action8]
class = updateINIfile
input_ref = timeHorizon
source_filepath = .\configs\OAAonDemand\wcsOAAonDemand_template.properties
target_filepath= %(workdir)s\wcsOAAonDemand.properties
section = DEFAULT
alias = time_horizont_sec

[Action9]
class = copyfile
source_filepath = .\configs\OAAonDemand\OAAonDemandWrapper_template.properties
target_filepath= %(workdir)s\OAAonDemandWrapper.properties


[Const3]
class = const
name = uniqueId
type = string
description = unique id identifing the run
value = %(unique_execution_id)s

[Action10]
class = updateINIfile
input_ref = uniqueId
source_filepath = ./src/wpsremote/xmpp_data/test/geoserverCommands_template.properties
target_filepath= %(workdir)s\geoserverCommands.properties
section = DEFAULT
alias = unique_id


[Output]
name = result
type = string
description = xml OAA output file
filepath = %(workdir)s\geoserverLoadOAAOutput.xml




[Logging]
#note the order
stdout_parser = [.*\[DEBUG\](.*), .*\[INFO\] ProgressInfo\:([-+]?[0-9]*\.?[0-9]*)\%, .*\[(INFO)\](.*), .*\[(WARN)\](.*), .*\[(ERROR)\](.*), .*\[(CRITICAL)\](.*)]
stdout_action = [ignore,          progress,                                          log,              log,              log,               abort]
